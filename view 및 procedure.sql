USE  PRACTICE;

SELECT  A.*
		,A.SALES_QTY * B.PRICE AS 결제금액
  FROM  SALES AS A
  LEFT
  JOIN  PRODUCT AS B
    ON  A.PRODUCT_CODE = B.PRODUCT_CODE;
    
CREATE VIEW SALES_PRODUCT AS
SELECT  A.*
		,A.SALES_QTY * B.PRICE AS 결제금액
  FROM  SALES AS A
  LEFT
  JOIN  PRODUCT AS B
    ON  A.PRODUCT_CODE = B.PRODUCT_CODE;
    
SELECT  *
  FROM  SALES_PRODUCT;
  
ALTER VIEW SALES_PRODUCT AS
SELECT  A.*
		,A.SALES_QTY * B.PRICE * 1.1 AS 결제금액_부가세포함
  FROM  SALES AS A
  LEFT
  JOIN  PRODUCT AS B
    ON  A.PRODUCT_CODE = B.PRODUCT_CODE;
    
SELECT  *
  FROM  SALES_PRODUCT;
  
DROP VIEW SALES_PRODUCT;
    
CREATE VIEW SALES_PRODUCT AS
SELECT  *
  FROM  SALES AS A
  LEFT
  JOIN  PRODUCT AS B
    ON  A.PRODUCT_CODE = B.PRODUCT_CODE;
    
DELIMITER //
CREATE PROCEDURE CST_GEN_ADDR_IN ( IN INPUT_A VARCHAR(20), INPUT_B VARCHAR(20) )
BEGIN
	SELECT  *
      FROM  CUSTOMER
	 WHERE  GENDER = INPUT_A
       AND  ADDR = INPUT_B;
END //
DELIMITER ;

CALL  CST_GEN_ADDR_IN('MAN', 'SEOUL');

CALL  CST_GEN_ADDR_IN('WOMEN', 'INCHEON');

DROP PROCEDURE CST_GEN_ADDR_IN;

DELIMITER //
CREATE PROCEDURE CST_GEN_ADDR_IN_CNT_MEM_OUT ( IN INPUT_A VARCHAR(20), INPUT_B VARCHAR(20), OUT CNT_MEM INT )
BEGIN
	SELECT  COUNT(MEM_NO)
      INTO  CNT_MEM
      FROM  CUSTOMER
	 WHERE  GENDER = INPUT_A
       AND  ADDR = INPUT_B;
END //
DELIMITER ;

CALL CST_GEN_ADDR_IN_CNT_MEM_OUT('WOMEN', 'INCHEON', @CNT_MEM);
SELECT  @CNT_MEM;

DELIMITER //
CREATE PROCEDURE IN_OUT_PARAMETER( INOUT COUNT INT)
BEGIN
	SET COUNT = COUNT + 10;
END //
DELIMITER ;

SET @COUNTER = 1;
CALL IN_OUT_PARAMETER(@COUNTER);
SELECT  @COUNTER;
        